name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: arm64
            goos: linux
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v -o . ./...
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        
    - name: Packaging...
      run: tar czf db_backup_go_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz db_backup_go* LICENSE
      
    - name: Uploading assets...
      if: ${{ !env.ACT }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
        asset_name: kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
        asset_content_type: application/gzip
